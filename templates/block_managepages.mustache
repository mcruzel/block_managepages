<div>
    <h2>{{#str}} select_pages, block_managepages {{/str}}</h2>
    <form method="post" action="{{{exporturl}}}" id="export-form">
        <input type="hidden" name="sesskey" value="{{sesskey}}" />
        <input type="hidden" id="block-managepages-courseid" value="{{courseid}}" />
        <input type="hidden" name="courseid" value="{{courseid}}">
        <div>
            <label>{{#str}} select_page_label, block_managepages {{/str}}</label>
            <div style="max-height:350px; overflow-y:auto; border:1px solid #ccc; padding:8px; width:100%;">
                {{#sections}}
                    <div style="margin-bottom:0;">
                        <strong>{{name}}</strong>
                        <ul style="margin:0; padding-left:20px;">
                        {{#pages}}
                            <li style="margin:0; padding:0; list-style:none; display:flex; align-items:center; justify-content:space-between;">
                                <label style="display:flex; align-items:center; margin:0; flex:1;">
                                    <input type="checkbox" name="page_ids[]" value="{{id}}" style="margin-right:5px;"> {{name}}
                                </label>
                                <div style="display:flex; gap:5px;">
                                    {{#canedit}}
                                    <button type="button" class="btn btn-sm btn-outline-secondary edit-page-btn" data-pageid="{{editid}}" style="font-size:12px; padding:2px 8px;" title="{{#str}} edit, block_managepages {{/str}}">‚úèÔ∏è</button>
                                    {{/canedit}}
                                    <a href="{{downloadurl}}" class="btn btn-sm btn-outline-secondary" style="font-size:12px; padding:2px 8px;" title="{{#str}} download, block_managepages {{/str}}">‚¨áÔ∏è</a>
                                </div>
                            </li>
                        {{/pages}}
                        </ul>
                    </div>
                {{/sections}}
            </div>
        </div>
        <div style="display: flex; gap: 10px; align-items: center; margin-top:10px;">
            <button type="submit">{{#str}} export_markdown, block_managepages {{/str}}</button>
            <button type="button" id="copy-markdown-btn">üìã {{#str}} copy_to_clipboard, block_managepages {{/str}}</button>
            <button type="button" id="download-all-btn">‚¨áÔ∏è {{#str}} download_all, block_managepages {{/str}}</button>
        </div>
    </form>
    <textarea id="markdown-content" style="display:none;"></textarea>
    <div id="block-managepages-modal" style="display:none; position:fixed; top:0; left:0; right:0; bottom:0; background:rgba(0,0,0,0.5); align-items:center; justify-content:center; z-index:1000;">
        <div style="background:#fff; padding:15px; width:90%; max-width:600px;">
            <h3 id="block-managepages-modal-title"></h3>
            <textarea id="block-managepages-modal-content" style="width:100%; height:300px;"></textarea>
            <div style="margin-top:10px; text-align:right;">
                <button type="button" id="block-managepages-modal-save">{{#str}} save, block_managepages {{/str}}</button>
                <button type="button" id="block-managepages-modal-cancel">{{#str}} cancel, block_managepages {{/str}}</button>
            </div>
        </div>
    </div>
    <script>
    function block_managepages_init() {
        var form = document.getElementById('export-form');
        var copyBtn = document.getElementById('copy-markdown-btn');
        var downloadAllBtn = document.getElementById('download-all-btn');
        var textarea = document.getElementById('markdown-content');
        var editButtons = document.querySelectorAll('.edit-page-btn');
        var modal = document.getElementById('block-managepages-modal');
        var modalTitle = document.getElementById('block-managepages-modal-title');
        var modalContent = document.getElementById('block-managepages-modal-content');
        var modalSave = document.getElementById('block-managepages-modal-save');
        var modalCancel = document.getElementById('block-managepages-modal-cancel');
        var currentPageId = null;

        if (!form) { return; }

        if (downloadAllBtn) {
            downloadAllBtn.addEventListener('click', function() {
                document.querySelectorAll('input[name="page_ids[]"]').forEach(function(cb){ cb.checked = true; });
                form.submit();
            });
        }

        if (copyBtn) {
            copyBtn.addEventListener('click', async function(e) {
                e.preventDefault();
                var checkboxes = document.querySelectorAll('input[name="page_ids[]"]:checked');
                var selected = Array.from(checkboxes).map(cb => cb.value);
                if (selected.length === 0) {
                    alert('Veuillez s√©lectionner au moins une page.');
                    return;
                }
                var courseInput = document.getElementById('block-managepages-courseid');
                var courseid = courseInput ? courseInput.value : null;
                if (!courseid) {
                    var urlParams = new URLSearchParams(window.location.search);
                    courseid = urlParams.get('course') || urlParams.get('courseid');
                }
                if (!courseid) {
                    alert('Impossible de d√©terminer l\'ID du cours. URL: ' + window.location.href);
                    return;
                }
                var sesskey = document.querySelector('input[name="sesskey"]').value;
                var exportUrl = M.cfg.wwwroot + '/blocks/managepages/export.php?ajax=1&sesskey=' + encodeURIComponent(sesskey) + '&courseid=' + courseid + '&page_ids[]=' + selected.join('&page_ids[]=');
                try {
                    var response = await fetch(exportUrl);
                    if (response.ok) {
                        var data = await response.json();
                        textarea.value = data.markdown;
                        textarea.style.display = 'block';
                        if (navigator.clipboard && navigator.clipboard.writeText) {
                            navigator.clipboard.writeText(textarea.value);
                        } else {
                            textarea.select();
                            document.execCommand('copy');
                        }
                        textarea.style.display = 'none';
                        alert('Contenu copi√© dans le presse-papier !');
                    } else {
                        alert('Erreur lors de la r√©cup√©ration du contenu Markdown. Status: ' + response.status);
                    }
                } catch (error) {
                    alert('Erreur r√©seau lors de la r√©cup√©ration du contenu Markdown: ' + error.message);
                }
            });
        }

        var sesskey = document.querySelector('input[name="sesskey"]').value;
        var courseidField = document.getElementById('block-managepages-courseid');
        var courseid = courseidField ? courseidField.value : 0;
        var strEditTitle = "{{#str}} edit_page_title, block_managepages {{/str}}";
        var strErrorLoad = "{{#str}} error:loadpage, block_managepages {{/str}}";
        var strErrorSave = "{{#str}} error:savepage, block_managepages {{/str}}";
        var strSuccessSave = "{{#str}} success:pagesaved, block_managepages {{/str}}";

        editButtons.forEach(function(btn) {
            btn.addEventListener('click', async function() {
                var pageid = this.dataset.pageid;
                currentPageId = pageid;
                try {
                    var resp = await fetch(M.cfg.wwwroot + '/blocks/managepages/export.php?ajax=2&sesskey=' + encodeURIComponent(sesskey) + '&courseid=' + courseid + '&pageid=' + pageid);
                    if (resp.ok) {
                        var data = await resp.json();
                        modalTitle.textContent = strEditTitle.replace('{$a}', data.name);
                        modalContent.value = data.content;
                        modal.style.display = 'flex';
                    } else {
                        alert(strErrorLoad);
                    }
                } catch (error) {
                    alert(strErrorLoad);
                }
            });
        });

        if (modalCancel) {
            modalCancel.addEventListener('click', function() {
                modal.style.display = 'none';
            });
        }

        if (modalSave) {
            modalSave.addEventListener('click', async function() {
                if (!currentPageId) { return; }
                try {
                    var resp = await fetch(M.cfg.wwwroot + '/blocks/managepages/export.php?ajax=3&sesskey=' + encodeURIComponent(sesskey) + '&courseid=' + courseid + '&pageid=' + currentPageId, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                        body: 'content=' + encodeURIComponent(modalContent.value)
                    });
                    if (resp.ok) {
                        modal.style.display = 'none';
                        alert(strSuccessSave);
                    } else {
                        alert(strErrorSave);
                    }
                } catch (error) {
                    alert(strErrorSave);
                }
            });
        }
    }

    window.addEventListener('DOMContentLoaded', block_managepages_init);
    </script>
    {{#message}}
        <div class="message">{{message}}</div>
    {{/message}}
</div>
